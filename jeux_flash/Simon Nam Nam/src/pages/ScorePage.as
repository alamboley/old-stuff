package pages {	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequestMethod;	import flash.net.URLRequest;	import com.gaiaframework.api.*;	import com.gaiaframework.templates.AbstractPage;	import com.greensock.TweenMax;	import flash.net.URLVariables;	public class ScorePage extends AbstractPage {		private var _urlVariables:URLVariables;		private var _urlLoader:URLLoader;		public function ScorePage() {			super();			alpha = 0;			//new Scaffold(this);		}		override public function transitionIn():void {			super.transitionIn();			TweenMax.to(this, 0.3, {alpha:1, onComplete:transitionInComplete});			_urlVariables = new URLVariables();			_urlLoader = new URLLoader();			_urlVariables.project_name = "Beat the bot";			_urlVariables.user_name = name;			_urlVariables.max_row = 10;			var urlRequest:URLRequest;			if (Gaia.api.getPage(Pages.INDEX).content.scoreDefini == true) {				_urlVariables.score = Gaia.api.getPage(Pages.INDEX).content.score;				urlRequest = new URLRequest("script/setScore.php");				urlRequest.data = _urlVariables;				urlRequest.method = URLRequestMethod.POST;				_urlLoader.addEventListener(Event.COMPLETE, _donneesEnvoyees);				_urlLoader.load(urlRequest);			} else {				_getHighScore();			}		}		private function _donneesEnvoyees(evt:Event):void {		}		private function _getHighScore():void {			var urlRequest:URLRequest = new URLRequest("script/getTopScores.php");			urlRequest.data = _urlVariables;			urlRequest.method = URLRequestMethod.POST;			_urlLoader.addEventListener(Event.COMPLETE, _donneesRecuperees);			_urlLoader.load(urlRequest);		}		private function _donneesRecuperees(evt:Event):void {			var xml:XML = XML(evt.target.data);			var i:uint = 0;						trace(xml.content.item);						/*			for each (var temp in xml.content.item) {				var ligne:Ligne = new Ligne(i.toString(), temp.user_name, temp.score);				ligne.x = 300;				ligne.y = 270 + 20 * i;				this.addChild(ligne);				i++;			}*/		}		override public function transitionOut():void {			super.transitionOut();			TweenMax.to(this, 0.3, {alpha:0, onComplete:transitionOutComplete});		}	}}