package pages {	import pages.decor.enceinte.AEnceinte;	import pages.ia.IAEvent;	import pages.ia.Joueur;	import pages.ia.Machine;	import pages.son.PlaylistSon;	import com.gaiaframework.templates.AbstractPage;	import com.greensock.TweenMax;	public class JeuPage extends AbstractPage {		public var enceinte:AEnceinte;				private var _machine:Machine;		private var _joueur:Joueur;				private var _nbSon:uint;		public function JeuPage() {			super();			alpha = 0;			new Scaffold(this);		}		override public function transitionIn():void {			super.transitionIn();			TweenMax.to(this, 0.3, {alpha:1, onComplete:transitionInComplete});			_initGame();		}		private function _initGame():void {			PlaylistSon.init();			enceinte.init();			_machine = new Machine();			_joueur = new Joueur(stage);						_lancerBattle();		}				private function _lancerBattle(iaEvt:IAEvent = null):void {						_joueur.removeEventListener(IAEvent.JOUEUR_COMPLETE, _lancerBattle);			_joueur.removeEventListener(IAEvent.JOUEUR_FAIL, _finJeu);						_machine.definirSequence();			_machine.addEventListener(IAEvent.MACHINE_COMPLETE, _reproduireSeq);		}				private function _reproduireSeq(iaEvt:IAEvent):void {						_machine.removeEventListener(IAEvent.MACHINE_COMPLETE, _reproduireSeq);						_joueur.reproduireSequence(++_nbSon);			_joueur.addEventListener(IAEvent.JOUEUR_COMPLETE, _lancerBattle);			_joueur.addEventListener(IAEvent.JOUEUR_FAIL, _finJeu);		}				private function _finJeu(iaEvt:IAEvent):void {						_joueur.removeEventListener(IAEvent.JOUEUR_COMPLETE, _lancerBattle);			_joueur.removeEventListener(IAEvent.JOUEUR_FAIL, _finJeu);						trace('YOU LOSE !');		}		override public function transitionOut():void {			super.transitionOut();			TweenMax.to(this, 0.3, {alpha:0, onComplete:transitionOutComplete});		}	}}