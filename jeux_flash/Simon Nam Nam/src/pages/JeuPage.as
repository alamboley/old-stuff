package pages {	import pages.ia.Machine;	import pages.decor.enceinte.AEnceinte;	import pages.event.JeuDispatcher;	import pages.event.JeuEvent;	import pages.son.PlaylistSon;	import com.gaiaframework.templates.AbstractPage;	import com.greensock.TweenMax;	public class JeuPage extends AbstractPage {				private var _progressSonJouer:uint;				public function JeuPage() {			super();			alpha = 0;			new Scaffold(this);		}		override public function transitionIn():void {			super.transitionIn();			TweenMax.to(this, 0.3, {alpha:1, onComplete:transitionInComplete});			PlaylistSon.init();						var enceinte:AEnceinte = new AEnceinte();						var machine:Machine = new Machine();			machine.definirSequence();			var jeuDispatcher:JeuDispatcher = new JeuDispatcher(stage);			jeuDispatcher.addEventListener(JeuEvent.SCROLLB, _playSoundEvent);			jeuDispatcher.addEventListener(JeuEvent.SCROLLB_ESPACE, _playSoundEvent);			jeuDispatcher.addEventListener(JeuEvent.SCROLLH, _playSoundEvent);			jeuDispatcher.addEventListener(JeuEvent.SCROLLH_ESPACE, _playSoundEvent);		}		private function _playSoundEvent(jEvt:JeuEvent):void {			switch (jEvt.type) {								case "SCROLLB":					PlaylistSon.getSoundGroup().playMySound(0);					break;				case "SCROLLB_ESPACE":					PlaylistSon.getSoundGroup().playMySound(1);					break;				case "SCROLLH":					PlaylistSon.getSoundGroup().playMySound(2);					break;				case "SCROLLH_ESPACE":					PlaylistSon.getSoundGroup().playMySound(3);					break;			}		}		override public function transitionOut():void {			super.transitionOut();			TweenMax.to(this, 0.3, {alpha:0, onComplete:transitionOutComplete});		}	}}