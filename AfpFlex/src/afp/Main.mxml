<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx" resize="_resize(event)"
	applicationComplete="_applicationComplete(event)">
	<fx:Script>
		<![CDATA[

			import afp.core.Config;
			import afp.remoting.Service;
			import afp.services.vo.PhotoVO;

			import com.adobe.serialization.json.JSON;

			import mx.collections.ArrayCollection;
			import mx.controls.ToolTip;
			import mx.core.FlexGlobals;

			private var _service:Service;
			
			[Bindable]
			private var _events:ArrayCollection = new ArrayCollection();

			[Bindable]
			private var _images:ArrayCollection = new ArrayCollection();

			[Bindable]
			private var _imagesToValidate:ArrayCollection = new ArrayCollection();

			private function _applicationComplete(evt:Event):void {
				resizeToolTip();

				nativeWindow.maximize();
				_getEvents();
			}

			private function _getEvents():void {

				_service = new Service(Config.SERVICES_URL + "usereventlinkservice.php");
				_service.onResult.addOnce(_addEvents);
				_service.onError.addOnce(_onError);
				_service.geteventsforuser("11");
			}

			private function _addEvents(events:Object):void {

				var object:Object = JSON.decode(String(events)).AFPResponse.dataObject;

				for each (var event:Object in object) {
					_events.addItem(event);
				}

			}

			private function _eventChange():void {

				_service = new Service(Config.SERVICES_URL + "mediaservice.php");

				_service.onResult.addOnce(_loadPictures);
				_service.onError.addOnce(_onError);
				_service.getphotosforevent(comboBoxEvents.selectedItem.id);
			}

			private function _loadPictures(pictures:Object):void {

				_images.removeAll();

				for each (var pict:Object in JSON.decode(String(pictures)).AFPResponse.dataObject) {

					if (pict.etat == 0) {

						pict.url = Config.SERVICES_URL + pict.url;

						_images.addItem(pict);
					}
				}
			}

			private function _onError(error:Object):void {
				trace("error");
			}

			private function _resize(evt:Event):void {
				resizeToolTip();
			}

			private function resizeToolTip():void {
				ToolTip.maxWidth = Math.min(FlexGlobals.topLevelApplication.width, ToolTip.maxWidth);
			}

			private function _validateImage():void {

				if (_imagesToValidate.length > 0) {

					var photoVo:PhotoVO;
					for each (var image:Object in _imagesToValidate) {
						photoVo = new PhotoVO(image);
						photoVo.etat = "1";
						photoVo.description = description.text;

						var url:String = Config.SERVICES_URL + 'mediaservice.php?method=udpatephoto&param=' + JSON.encode(photoVo);
						var request:URLRequest = new URLRequest(url);
						var loader:URLLoader = new URLLoader();

						loader.addEventListener(Event.COMPLETE, _imageValidated);
						request.method = URLRequestMethod.GET;
						loader.load(request);
					}

					_imagesToValidate.removeAll();
				}
			}

			private function _imageValidated(evt:Event):void {

			}

			private function _afficherImage():void {
				
				if (containerImage.selectedItem) {
					grandeImage.source = containerImage.selectedItem.url;
					description.text = containerImage.selectedItem.description;
				} else if (containerValidateImage.selectedItem) {
					grandeImage.source = containerValidateImage.selectedItem.url;
					description.text = containerValidateImage.selectedItem.description;
				}
			}

			private function _updateText():void {
				containerValidateImage.selectedItem.description = description.text;
			}
		]]>
	</fx:Script>


	<fx:Declarations>

	</fx:Declarations>

	<mx:TabNavigator width="100%" height="100%" horizontalCenter="0">
		<s:NavigatorContent label="Gérer les photos">
			<s:VGroup>
				<s:Label text="Sélectionner l'évènement : "/>
				<s:ComboBox id="comboBoxEvents" dataProvider="{_events}"
					selectedIndex="0" labelField="nom" change="_eventChange()"/>

				<s:Label text="Drag and drop l'image et valider"/>

				<s:HGroup>

					<s:List toolTip="image à glisser" height="400" width="150" id="containerImage"
						dataProvider="{_images}" itemRenderer="afp.components.ImageAFP"
						dragMoveEnabled="true" dragEnabled="true"
						dropEnabled="true" change="_afficherImage()"/>

					<s:VGroup>
						<s:Image id="grandeImage" height="300" width="300"/>
						<s:TextArea id="description" height="50" width="300" toolTip="description" change="_updateText()" />
					</s:VGroup>

					<s:List toolTip="image à déposer" height="400" width="150" id="containerValidateImage"
						dataProvider="{_imagesToValidate}" itemRenderer="afp.components.ImageAFP"
						dragMoveEnabled="true" dragEnabled="true"
						dropEnabled="true" change="_afficherImage()"/>

					<s:Button label="Valider" click="_validateImage()"/>

				</s:HGroup>

			</s:VGroup>

		</s:NavigatorContent>
	</mx:TabNavigator>


</s:WindowedApplication>
