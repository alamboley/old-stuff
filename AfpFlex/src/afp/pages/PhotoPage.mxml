<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:mx="library://ns.adobe.com/flex/mx" resize="_resize(event)"
	creationComplete="_init()">
	<fx:Script>
		<![CDATA[
			import afp.core.Config;
			import afp.remoting.Service;
			import afp.services.vo.PhotoVO;

			import com.adobe.serialization.json.JSON;

			import mx.collections.ArrayCollection;
			import mx.controls.ToolTip;
			import mx.core.FlexGlobals;

			import flash.events.Event;
			import flash.net.URLLoader;
			import flash.net.URLRequest;
			import flash.net.URLRequestMethod;

			private var _service : Service;
			[Bindable]
			public var eventsArray : ArrayCollection = new ArrayCollection();
			[Bindable]
			private var _images : ArrayCollection = new ArrayCollection();
			[Bindable]
			private var _imagesToValidate : ArrayCollection = new ArrayCollection();

			private function _init() : void
			{
				resizeToolTip();
			}

			private function _eventChange() : void
			{
				_service = new Service(Config.SERVICES_URL + "mediaservice.php");

				_service.onResult.addOnce(_loadPictures);
				_service.onError.addOnce(_onError);
				_service.getphotosforevent(comboBoxEvents.selectedItem.id);
			}

			private function _loadPictures(pictures : Object) : void
			{
				_images.removeAll();

				for each (var pict:Object in com.adobe.serialization.json.JSON.decode(String(pictures)).AFPResponse.dataObject)
				{
					if (pict.etat == 0)
					{
						pict.url = Config.SERVICES_URL + pict.url;

						var identique : Boolean = false;
						for each (var pictAlreadyAdded:Object in _imagesToValidate)
						{
							if (pict.url == pictAlreadyAdded.url)
							{
								identique = true;
								break;
							}
						}

						if (identique == false)
							_images.addItem(pict);
					}
				}
			}

			private function _onError(error : Object) : void
			{
				trace("error");
			}

			private function _resize(evt : Event) : void
			{
				resizeToolTip();
			}

			private function resizeToolTip() : void
			{
				ToolTip.maxWidth = Math.min(FlexGlobals.topLevelApplication.width, ToolTip.maxWidth);
			}

			private function _validateImage() : void
			{
				if (_imagesToValidate.length > 0)
				{
					var photoVo : PhotoVO;
					for each (var image:Object in _imagesToValidate)
					{
						photoVo = new PhotoVO(image);
						photoVo.etat = "1";
						photoVo.description = description.text;

						var url : String = Config.SERVICES_URL + 'mediaservice.php?method=udpatephoto&param=' + com.adobe.serialization.json.JSON.encode(photoVo);
						var request : URLRequest = new URLRequest(url);
						var loader : URLLoader = new URLLoader();

						loader.addEventListener(Event.COMPLETE, _imageValidated);
						request.method = URLRequestMethod.GET;
						loader.load(request);
					}

					_imagesToValidate.removeAll();
				}
			}

			private function _imageValidated(evt : Event) : void
			{
			}

			private function _afficherImage() : void
			{
				if (containerImage.selectedItem)
				{
					grandeImage.source = containerImage.selectedItem.url;
					description.text = containerImage.selectedItem.description;
				}
				else if (containerValidateImage.selectedItem)
				{
					grandeImage.source = containerValidateImage.selectedItem.url;
					description.text = containerValidateImage.selectedItem.description;
				}
			}

			private function _updateText() : void
			{
				if (containerValidateImage.selectedItem)
					containerValidateImage.selectedItem.description = description.text;
			}
		]]>
	</fx:Script>
	<s:Label fontSize="20" paddingLeft="20" text="Sélectionner l'évènement : "/>
	<s:HGroup paddingLeft="20">
		<s:ComboBox id="comboBoxEvents" dataProvider="{eventsArray}"
			selectedIndex="0" labelField="nom" change="_eventChange()"/>

		<s:Button toolTip="Mettre à jour les images" label="Valider la publication les images"
			click="_validateImage()"/>
	</s:HGroup>


	<s:HGroup paddingLeft="20">
		<s:VGroup height="500" width="300">
			<s:Label fontSize="15" text="Photos des journalistes"/>
			<s:List toolTip="image à glisser" height="100%" width="100%"
				id="containerImage" dataProvider="{_images}"
				itemRenderer="afp.components.ImageAFP"
				dragMoveEnabled="true" dragEnabled="true" dropEnabled="true"
				change="_afficherImage()"/>
		</s:VGroup>
		<s:VGroup height="500" width="300">
			<s:Label fontSize="15" text="Photos à valider"/>
			<s:List toolTip="image à déposer" height="100%" width="100%"
				id="containerValidateImage" dataProvider="{_imagesToValidate}"
				itemRenderer="afp.components.ImageAFP"
				dragMoveEnabled="true" dragEnabled="true" dropEnabled="true"
				change="_afficherImage()"/>
		</s:VGroup>

		<s:VGroup horizontalAlign="center" height="500" width="300">
			<s:Image id="grandeImage" height="300" width="100%"/>
			<s:TextArea id="description" width="100%" bottom="0"
				toolTip="description" change="_updateText()"/>
		</s:VGroup>

	</s:HGroup>

</s:VGroup>